# Default settings, you can overwrite these with environment variables
vamp_version = "0.9.2"
vamp_version = ${?VAMP_VERSION}

vamp {

  persistence {
    database.type = "elasticsearch"
    database.elasticsearch.url = ${vamp.pulse.elasticsearch.url}

    key-value-store {
      type = "etcd"
      etcd.url = "http://etcd-client:2379"
    }
  }

  container-driver {

    type = "kubernetes"

    kubernetes {
      url = "https://kubernetes"
      service-type = "LoadBalancer"
    }
  }

  http-api.ui {
    directory = "/usr/local/vamp/ui"
    index = ${vamp.http-api.ui.directory}"/index.html"
  }

  workflow-driver {
    type = "kubernetes"

    workflow {
      deployables = {
        application.javascript = {
          type = "container/docker"
          definition = "magneticio/vamp-workflow-agent:"${vamp_version}
          environment-variables = [
            "VAMP_URL=http://vamp:8080"
            "VAMP_KEY_VALUE_STORE_PATH=/vamp/workflows/${workflow}/value"
            "VAMP_KEY_VALUE_STORE_TYPE="${vamp.persistence.key-value-store.type}
            "VAMP_KEY_VALUE_STORE_CONNECTION="${vamp.persistence.key-value-store.etcd.url}
            "VAMP_WORKFLOW_EXECUTION_PERIOD=60"
            "VAMP_WORKFLOW_EXECUTION_TIMEOUT=10"
            "VAMP_ELASTICSEARCH_URL="${vamp.pulse.elasticsearch.url}
          ]
        }
      }
      scale {
        instances = 1
        cpu = 0.1
        memory = 128MB
      }
    }
  }

  pulse {
    type = "elasticsearch"
    elasticsearch.url = "http://elasticsearch:9200"
  }

  gateway-driver {
    elasticsearch.metrics {
      index = "vamp-vga-*"
      type = "log"
    }
    marshallers = [
      {
        type = "haproxy"
        name = "1.7"
        template {
          resource = "/io/vamp/gateway_driver/haproxy/template.twig"
        }
      }
    ]
  }

  operation {

    synchronization.period = 3 seconds

    deployment {
      scale {
        instances: 1
        cpu: 0.2
        memory: 256MB
      }
      arguments: [
        "privileged=true"
      ]
    }
  }

  lifter.artifact.files = [
    "/usr/local/vamp/artifacts/breeds/health.js"
    "/usr/local/vamp/artifacts/workflows/health.yml"
    "/usr/local/vamp/artifacts/breeds/metrics.js"
    "/usr/local/vamp/artifacts/workflows/metrics.yml"
    "/usr/local/vamp/artifacts/breeds/allocation.js"
    "/usr/local/vamp/artifacts/workflows/allocation.yml"
    "/usr/local/vamp/artifacts/breeds/kibana.js"
    "/usr/local/vamp/artifacts/workflows/kibana.yml"
  ]
}

akka.ssl-config.trustManager.stores = [
  {
    type = "PEM"
    path = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
  }
]
