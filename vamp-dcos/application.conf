# Default settings, you can overwrite these with environment variables
vamp_url = "http://10.20.0.100:8080"
vamp_url = ${?VAMP_URL}

zookeeper_servers = "zk-1.zk:2181"
zookeeper_servers = ${?VAMP_ZOOKEEPER_SERVERS}

elasticsearch_url = "http://elasticsearch.marathon.mesos:9200"
elasticsearch_url = ${?VAMP_ELASTICSEARCH_URL}

# Advanced settings, you shouldn't need to change these
vamp {

  persistence {
    database.type = "elasticsearch"
    database.elasticsearch.url = ${vamp.pulse.elasticsearch.url}

    key-value-store {
      type = "zookeeper"
      zookeeper.servers = ${zookeeper_servers}
    }
  }

  container-driver {
    type = "marathon"
    mesos.url = "http://leader.mesos:5050"
    marathon.url = "http://marathon.mesos:8080"
  }

  gateway-driver {

    host = "172.17.0.1"

    elasticsearch.metrics {
      index = "vamp-vga-*"
      type = "log"
    }

    marshallers = [
      {
        type = "haproxy"
        name = "1.7"
        template {
          resource = "/io/vamp/gateway_driver/haproxy/template.twig"
        }
      }
    ]
  }

  http-api.ui {
    directory = "/usr/local/vamp/ui"
    index = ${vamp.http-api.ui.directory}"/index.html"
  }

  workflow-driver {
    type = "marathon" # if chronos is installed: "marathon,chronos"

    workflow {
      deployables = {
        application.javascript = {
          type = "container/docker"
          definition = "magneticio/vamp-workflow-agent:katana"
          environment-variables = [
            "VAMP_URL="${vamp_url}
            "VAMP_KEY_VALUE_STORE_PATH=/vamp/workflows/${workflow}"
            "VAMP_KEY_VALUE_STORE_TYPE=zookeeper"
            "VAMP_KEY_VALUE_STORE_CONNECTION="${zookeeper_servers}
            "VAMP_WORKFLOW_EXECUTION_PERIOD=60"
            "VAMP_WORKFLOW_EXECUTION_TIMEOUT=10"
          ]
          network = "HOST"
        }
      }
      scale {
        instances = 1
        cpu = 0.1
        memory = 128MB
      }
    }
  }

  pulse {
    type = "elasticsearch"
    elasticsearch.url = ${elasticsearch_url}
  }

  operation {

    synchronization.period = 3 seconds

    check {
      cpu: true
      memory: true
      instances: true
    }

    deployment {
      scale {
        instances: 1
        cpu: 0.2
        memory: 256MB
      }
      arguments: [
        "privileged=true"
      ]
    }
  }

  lifter.artifact.files = [
    "/usr/local/vamp/artifacts/breeds/health.js"
    "/usr/local/vamp/artifacts/workflows/health.yml"
    "/usr/local/vamp/artifacts/breeds/metrics.js"
    "/usr/local/vamp/artifacts/workflows/metrics.yml"
    "/usr/local/vamp/artifacts/breeds/allocation.js"
    "/usr/local/vamp/artifacts/workflows/allocation.yml"
    "/usr/local/vamp/artifacts/breeds/kibana.js"
    "/usr/local/vamp/artifacts/workflows/kibana.yml"
    "/usr/local/vamp/artifacts/breeds/vga.js"
    "/usr/local/vamp/artifacts/workflows/vga.yml"
  ]
}
